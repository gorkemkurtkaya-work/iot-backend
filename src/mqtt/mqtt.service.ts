import { Injectable, OnModuleInit } from '@nestjs/common';
import * as mqtt from 'mqtt';
import { SensorDataService } from '../sensor-data/sensor-data.service';

@Injectable()
export class MqttService implements OnModuleInit {
  private client;

  constructor(private readonly sensorDataService: SensorDataService) {}

  onModuleInit() {
    this.connectAndSubscribe();
  }

  private connectAndSubscribe() {
    this.client = mqtt.connect('mqtt://localhost:1883'); // veya ortam deÄŸiÅŸkeni

    this.client.on('connect', () => {
      console.log('âœ… MQTT baÄŸlantÄ±sÄ± kuruldu');
      this.client.subscribe('factory/temperature/#', (err) => {
        if (err) console.error('ğŸ“› MQTT subscribe hatasÄ±:', err);
        else console.log('ğŸ“¡ MQTT topicâ€™e abone olundu');
      });
    });

    this.client.on('message', async (topic, message) => {
      try {
        const payload = JSON.parse(message.toString());

        // Basit doÄŸrulama
        const { sensor_id, temperature, humidity, timestamp } = payload;
        if (!sensor_id || !temperature || !humidity || !timestamp) {
          console.warn('ğŸ“› Eksik veri:', payload);
          return;
        }

        // VeritabanÄ±na kaydet
        await this.sensorDataService.create({
          sensor_id,
          temperature,
          humidity,
          timestamp, // ISO string olmalÄ±
        });

        console.log('âœ… Veri kaydedildi:', payload);
      } catch (err) {
        console.error('ğŸ“› MQTT mesaj iÅŸleme hatasÄ±:', err.message);
      }
    });
  }
}
